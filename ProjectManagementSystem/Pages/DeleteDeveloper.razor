@page "/DeleteDeveloper/{Id}"
@using ProjectManagementSystem.Data
@inject DeveloperService developerService
@inject NavigationManager NavigationManager
@attribute [Authorize]
<h2>Delete Developer</h2>
<hr />
<h3>Are you sure want to delete this?</h3>
<form>
    <div class="row">
        <div class=" col-md-8">
            <div class="form-group">
                <label> Id:</label>
                <label>@obj.Id</label>
            </div>
            <div class="form-group">
                <label> Name:</label>
                <label>@obj.Name</label>
            </div>
            <div class="form-group">
                <label>Description:</label>
                <label>@obj.Description</label>
            </div>
            <div class="form-group">
                <label>Category:</label>
                <label>@obj.Project</label>
            </div>
            <div class="form-group">
                <label>Role:</label>
                <label>@obj.Role</label>
            </div>
            <div class="form-group">
                <label>Price:</label>
                <label>@obj.Experience</label>
            </div>
        </div>

    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <input type="button" class="btn btn-danger" @onclick="@Delete" value="Delete" />
                <input type="button" class="btn btn-primary" @onclick="@Cancel" value="Cancel" />
            </div>
        </div>
    </div>
</form>

@code {
    [Parameter]
    public string Id { get; set; }
    Developer obj = new Developer();
    protected override async Task OnInitializedAsync()
    {
        obj = await Task.Run(() => developerService.GetDeveloperAsync(Convert.ToInt32(Id)));
    }
    protected async void Delete()
    {
        await developerService.DeleteDeveloperAsync(obj);
        NavigationManager.NavigateTo("Developers");
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("Developers");
    }
}